/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MultiDistributor,
  MultiDistributorInterface,
} from "../MultiDistributor";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "epochTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tag",
        type: "string",
      },
    ],
    name: "ClaimAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClaimRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct MultiDistributor.UserTokenAmounts[]",
        name: "claimsToAdd",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "epochTimestamp",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tag",
        type: "string",
      },
    ],
    name: "addToClaims",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "claimableBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "getClaimableForAddresses",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct MultiDistributor.UserTokenAmounts[]",
        name: "claimed",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct MultiDistributor.UserTokenAmounts[]",
        name: "claimable",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "removeClaims",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "totalClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b6111148061007d6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806376c13cbd1161006657806376c13cbd146100f15780638da5cb5b146101045780639e28988d14610119578063cfc891e41461013a578063f2fde38b1461014d57610093565b8063318d9e5d14610098578063594065d0146100ad57806361082d5d146100d6578063715018a6146100e9575b600080fd5b6100ab6100a6366004610d80565b610160565b005b6100c06100bb366004610c85565b610379565b6040516100cd9190610fda565b60405180910390f35b6100ab6100e4366004610dbb565b610396565b6100ab610509565b6100c06100ff366004610c85565b6105b5565b61010c6105d2565b6040516100cd9190610f48565b61012c610127366004610cbd565b6105e1565b6040516100cd929190610f75565b6100ab610148366004610cbd565b610875565b6100ab61015b366004610c62565b610a5e565b60005b8151811015610375573360009081526001602052604081208351829085908590811061018b57fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054905080600014156101c5575061036d565b336000908152600160205260408120845182908690869081106101e457fe5b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020819055508060026000336001600160a01b03166001600160a01b03168152602001908152602001600020600085858151811061024457fe5b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000828254019250508190555082828151811061028557fe5b60200260200101516001600160a01b031663a9059cbb33836040518363ffffffff1660e01b81526004016102ba929190610f5c565b602060405180830381600087803b1580156102d457600080fd5b505af11580156102e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030c9190610ecc565b50336001600160a01b031683838151811061032357fe5b60200260200101516001600160a01b03167ff7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd3992683836040516103639190610fda565b60405180910390a3505b600101610163565b5050565b600260209081526000928352604080842090915290825290205481565b61039e610b60565b6001600160a01b03166103af6105d2565b6001600160a01b0316146103f8576040805162461bcd60e51b815260206004820181905260248201526000805160206110bf833981519152604482015290519081900360640190fd5b60005b83518110156105035761040c610b64565b84828151811061041857fe5b6020908102919091018101516040808201805183516001600160a01b03908116600090815260018088528582208789018051851684529089528683208054909501909455935186518316825293875284812092519091168152945292205490925010156104a05760405162461bcd60e51b815260040161049790610fa3565b60405180910390fd5b8381600001516001600160a01b031682602001516001600160a01b03167fb0ac82d7f78225d6523543322fb77614ac19b3081b0675e3df9ba0566145be2e8460400151876040516104f2929190610fe3565b60405180910390a4506001016103fb565b50505050565b610511610b60565b6001600160a01b03166105226105d2565b6001600160a01b03161461056b576040805162461bcd60e51b815260206004820181905260248201526000805160206110bf833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600160209081526000928352604080842090915290825290205481565b6000546001600160a01b031690565b606080825184510267ffffffffffffffff811180156105ff57600080fd5b5060405190808252806020026020018201604052801561063957816020015b610626610b64565b81526020019060019003908161061e5790505b509050825184510267ffffffffffffffff8111801561065757600080fd5b5060405190808252806020026020018201604052801561069157816020015b61067e610b64565b8152602001906001900390816106765790505b50915060005b845181101561086d5760005b84518110156108645760405180606001604052808784815181106106c357fe5b60200260200101516001600160a01b031681526020018683815181106106e557fe5b60200260200101516001600160a01b031681526020016002600089868151811061070b57fe5b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600088858151811061074157fe5b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205481525084838151811061077957fe5b6020026020010181905250604051806060016040528087848151811061079b57fe5b60200260200101516001600160a01b031681526020018683815181106107bd57fe5b60200260200101516001600160a01b03168152602001600160008986815181106107e357fe5b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600088858151811061081957fe5b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205481525083838151811061085157fe5b60209081029190910101526001016106a3565b50600101610697565b509250929050565b61087d610b60565b6001600160a01b031661088e6105d2565b6001600160a01b0316146108d7576040805162461bcd60e51b815260206004820181905260248201526000805160206110bf833981519152604482015290519081900360640190fd5b60005b8251811015610a595760005b8251811015610a505760006001600086858151811061090157fe5b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600085848151811061093757fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054905060006001600087868151811061097457fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008685815181106109aa57fe5b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020819055508483815181106109e257fe5b60200260200101516001600160a01b03168483815181106109ff57fe5b60200260200101516001600160a01b03167f0c8df48908c0ea535bfd853f98d669ef50f73e8f493551f4aa8904490f7eee0f83604051610a3f9190610fda565b60405180910390a3506001016108e6565b506001016108da565b505050565b610a66610b60565b6001600160a01b0316610a776105d2565b6001600160a01b031614610ac0576040805162461bcd60e51b815260206004820181905260248201526000805160206110bf833981519152604482015290519081900360640190fd5b6001600160a01b038116610b055760405162461bcd60e51b81526004018080602001828103825260268152602001806110996026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b604080516060810182526000808252602082018190529181019190915290565b600082601f830112610b94578081fd5b8135610ba7610ba282611062565b61103e565b818152915060208083019084810181840286018201871015610bc857600080fd5b60005b84811015610bf0578135610bde81611080565b84529282019290820190600101610bcb565b505050505092915050565b600082601f830112610c0b578081fd5b813567ffffffffffffffff811115610c1f57fe5b610c32601f8201601f191660200161103e565b9150808252836020828501011115610c4957600080fd5b8060208401602084013760009082016020015292915050565b600060208284031215610c73578081fd5b8135610c7e81611080565b9392505050565b60008060408385031215610c97578081fd5b8235610ca281611080565b91506020830135610cb281611080565b809150509250929050565b60008060408385031215610ccf578182fd5b823567ffffffffffffffff80821115610ce6578384fd5b818501915085601f830112610cf9578384fd5b8135610d07610ba282611062565b80828252602080830192508086018a828387028901011115610d27578889fd5b8896505b84871015610d52578035610d3e81611080565b845260019690960195928101928101610d2b565b509096508701359350505080821115610d69578283fd5b50610d7685828601610b84565b9150509250929050565b600060208284031215610d91578081fd5b813567ffffffffffffffff811115610da7578182fd5b610db384828501610b84565b949350505050565b60008060006060808587031215610dd0578182fd5b843567ffffffffffffffff80821115610de7578384fd5b818701915087601f830112610dfa578384fd5b8135610e08610ba282611062565b80828252602080830192508086018c828987028901011115610e28578889fd5b8896505b84871015610e965787818e031215610e42578889fd5b604080518981018181108982111715610e5757fe5b82528235610e6481611080565b815282840135610e7381611080565b818501528282013591810191909152845260019690960195928101928701610e2c565b50909850890135965050506040870135925080831115610eb4578384fd5b5050610ec286828701610bfb565b9150509250925092565b600060208284031215610edd578081fd5b81518015158114610c7e578182fd5b6000815180845260208085019450808401835b83811015610f3d57815180516001600160a01b0390811689528482015116848901526040908101519088015260609096019590820190600101610eff565b509495945050505050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b600060408252610f886040830185610eec565b8281036020840152610f9a8185610eec565b95945050505050565b6020808252601d908201527f4164646974696f6e206f766572666c6f7720666f722062616c616e6365000000604082015260600190565b90815260200190565b600083825260206040818401528351806040850152825b8181101561101657858101830151858201606001528201610ffa565b818111156110275783606083870101525b50601f01601f191692909201606001949350505050565b60405181810167ffffffffffffffff8111828210171561105a57fe5b604052919050565b600067ffffffffffffffff82111561107657fe5b5060209081020190565b6001600160a01b038116811461109557600080fd5b5056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a26469706673582212200aa5b235d7a4bbd6ea5038b91e5aa8abb9ab6218751c38575db5119e6d94e1a764736f6c63430007050033";

type MultiDistributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiDistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiDistributor__factory extends ContractFactory {
  constructor(...args: MultiDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MultiDistributor";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MultiDistributor> {
    return super.deploy(overrides || {}) as Promise<MultiDistributor>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MultiDistributor {
    return super.attach(address) as MultiDistributor;
  }
  connect(signer: Signer): MultiDistributor__factory {
    return super.connect(signer) as MultiDistributor__factory;
  }
  static readonly contractName: "MultiDistributor";
  public readonly contractName: "MultiDistributor";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiDistributorInterface {
    return new utils.Interface(_abi) as MultiDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiDistributor {
    return new Contract(address, _abi, signerOrProvider) as MultiDistributor;
  }
}
